#!/bin/bash

# ZINIT package manager
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Theme
zinit ice depth=1; zinit light romkatv/powerlevel10k

# Syntax highlight
zinit light zdharma-continuum/fast-syntax-highlighting

# Command suggestions
zinit light zsh-users/zsh-autosuggestions

# git-fzf | gfzf | gf fuzzy find branches
zinit light alexiszamanidis/zsh-git-fzf

# Oh my zsh port
zinit snippet OMZL::history.zsh
zinit snippet OMZL::key-bindings.zsh
zinit snippet OMZL::directories.zsh
zinit snippet OMZP::git
zinit snippet OMZP::colored-man-pages

## WARN: Keep completion as last package for fast loading
# Completions package
zinit light zsh-users/zsh-completions

# Load completions
autoload -U compinit && compinit

# FZF when tabbing for completions
# WARN: Must be after compinit to work
zinit light Aloxaf/fzf-tab

# -q is for quiet; actually run all the `compdef's saved before `compinit` call
# (`compinit' declares the `compdef' function, so it cannot be used until
# `compinit' is ran; Zinit solves this via intercepting the `compdef'-calls and
# storing them for later use with `zinit cdreplay')
zinit cdreplay -q

# Completions setup
zstyle ':completion:*' menu no # Disable default zsh completion menu
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'r:|=*' 'l:|=* r:|=*' # case insensitive
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}" # Use LS_COLORS for completion colors
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath' # Show directory content when completing cd

# TODO Check why this is necessary
if test ! $(which kitty); then
  # Completion for kitty
  kitty + complete setup zsh | source /dev/stdin
fi

# Load all custom configs from dotfiles to zsh
for file in $DOTFILES_ROOT/zsh/*.zsh; do
  source $file
done
