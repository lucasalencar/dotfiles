" load vim-plug
call plug#begin('~/.vim/plugged')

" Plugin with default configurations agreed with the community
" This is good to make the configurations in this file more simple
Plug 'tpope/vim-sensible'

Plug 'itchyny/lightline.vim' " Minimalist status line
Plug 'ap/vim-css-color' " Show color when writing HEX colors
Plug 'tpope/vim-eunuch' " Vim commands for the bash (Mkdir, Move, Rename, ...)
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all'  }
Plug 'junegunn/fzf.vim' " File fuzzy search and content search
Plug 'scrooloose/nerdtree' " File tree
Plug 'scrooloose/nerdcommenter' " Plugin to add comments according to language
Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
Plug 'thinca/vim-visualstar' " Search for terms using * or # on Visual Mode
Plug 'ervandew/supertab' " Complete what is being written with <tab>
Plug 'tpope/vim-surround' " Easily add things surrounding selections
Plug 'tpope/vim-unimpaired' " https://github.com/tpope/vim-unimpaired/blob/master/doc/unimpaired.txt
Plug 'tpope/vim-repeat' " Repeat commands from plugins with .
Plug 'bronson/vim-trailing-whitespace' " Remove trailing whitespace
Plug 'tmhedberg/matchit' " Matches HTML tags with %
Plug 'AndrewRadev/switch.vim' " Switch a representation by another (ex: string to symbol in ruby)
Plug 'junegunn/vim-easy-align' " Align tables in text easily
Plug 'w0rp/ale' " Linters

" This plugin is conflicting with Clojure plugins and having unwanted
" behavior. Removed for now, if using any other language then Clojure, enable
" it again.
"Plug 'jiangmiao/auto-pairs' " When opening parenthesis it closes automatically

if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
endif

""" GIT
Plug 'tpope/vim-fugitive' " Git wrapper for vim
Plug 'tpope/vim-rhubarb' " Git extension for vim-fugitive
Plug 'airblade/vim-gitgutter' " Git add or removed lines indication
""" GIT

""" RUBY & RAILS PLUGINS
Plug 'tpope/vim-rails', { 'for': 'ruby' }
Plug 'sunaku/vim-ruby-minitest', { 'for': 'ruby' } " Syntax highlight
Plug 'tpope/vim-endwise', { 'for': 'ruby' } " Add end when opening block in ruby
Plug 'AndrewRadev/splitjoin.vim', { 'for': 'ruby' } " Split inline constructs to multiple lines and vice versa
""" end RUBY & RAILS PLUGINS

""" CLOJURE PLUGINS
Plug 'tpope/vim-dispatch' " Dispatch commands to console through vim integrated with tmux

" Clojure integration with nREPL
" - Enables go to definition or file (gf [<C-d> mapped to gd)
" - Allows to search for doc or source code for a command (:Doc :Source <shift-K>)
" - It is possible to eval Clojure code inside the buffer (:Eval)
Plug 'tpope/vim-fireplace', { 'for': 'clojure' }

""" Support to lein projects
" - Adds navigation to specific dirs (:Esource :Etest)
" - Allow open alternativa files (:A :AT :AV)
" - Allow to open a REPL through vim (:Console)
Plug 'tpope/vim-salve', { 'for': 'clojure' }
Plug 'tpope/vim-projectionist' " Allows to map projections to the project (dependency to vim-salve)

" Static syntax highlight for clojure
Plug 'lucasalencar/vim-clojure-static', { 'for': 'clojure' }
" Turns syntax highlight dynamic, allows to highlight project defined functions
Plug 'guns/vim-clojure-highlight', { 'for': 'clojure' }

Plug 'guns/vim-sexp', { 'for': 'clojure' }
Plug 'tpope/vim-sexp-mappings-for-regular-people', { 'for': 'clojure' }
Plug 'gregspurrier/vim-midje', { 'for': 'clojure' }
Plug 'amdt/vim-niji', { 'for': 'clojure' } " Rainbow parenthesis

if has('nvim')
  Plug 'snoe/clj-refactor.nvim' " Nice keybindings to refactor clojure code
endif
""" end CLOJURE PLUGINS

" OBS: Creates panel switching mapping using ctrl+<direction>
" It is not necessary to add it to vimrc
Plug 'christoomey/vim-tmux-navigator'

" When losing or gaining focus, execute some autocommands
" Fixes some behaviors when using vim inside tmux
Plug 'tmux-plugins/vim-tmux-focus-events'

" Color schemes
Plug 'brendonrapp/smyck-vim'
Plug 'rafi/awesome-vim-colorschemes'


Plug 'sheerun/vim-polyglot' " Syntax highlight for may languages

call plug#end()

" Load sensible configs for vim
source $DOTFILES_ROOT/vim/sensible.vim

" Load all my custom mappings
source $DOTFILES_ROOT/vim/mappings.vim

" Load all maps that use MacOS option-key unicode characters
"source $DOTFILES_ROOT/vim/mac-option-maps.vim

" Load all alt-key maps
" Use this when macos_option_as_alt for kitty is set to yes
source $DOTFILES_ROOT/vim/alt-maps.vim

source $DOTFILES_ROOT/vim/deoplete.vim
source $DOTFILES_ROOT/vim/easyalign.vim
source $DOTFILES_ROOT/vim/fzf.vim
source $DOTFILES_ROOT/vim/lightline.vim
source $DOTFILES_ROOT/vim/nerdtree.vim
source $DOTFILES_ROOT/vim/vim-clojure-static.vim
source $DOTFILES_ROOT/vim/vim-tmux-navigator.vim
source $DOTFILES_ROOT/vim/clojure.vim
