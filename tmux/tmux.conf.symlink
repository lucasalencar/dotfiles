set -g prefix ` # Change prefix key to backtick (`)

# Set zsh as default shell
set-option -g default-shell /bin/zsh

### Set alternate binding for clearing screen
# ctrl-l is used for switching between vim+tmux panels
bind C-l send-keys 'C-l'
# ctrl-k clears the current history
bind C-k send-keys -R \; clear-history

### Setup status bar
set-window-option -g status-left " #S " # Session number indication
set-window-option -g status-left-fg black
set-window-option -g status-left-bg white

set-window-option -g status-right " %H:%M %d/%m/%y "
set-window-option -g status-right-fg black
set-window-option -g status-right-bg white

set-window-option -g window-status-current-fg green
set-window-option -g window-status-current-bg black

# Show current directory in the window status name
set -g window-status-format ' #I: #(pwd="#{pane_current_path}"; echo ${pwd####*/}) '
set -g window-status-current-format ' #I: #(pwd="#{pane_current_path}"; echo ${pwd####*/}) '

# status bar updates every 15s by default, change to 1s here
# (this step is optional - a lower latency might have negative battery/cpu usage impacts)
set -g status-interval 5

set -g base-index 1      # Set window index to start from 1 instead of 0
set -g mouse on          # Allow selecting panes, resizing panes and select windows with mouse
#setw -g automatic-rename # Automatically set window title to running command
set -g @scroll-speed-num-lines-per-scroll 5 # Faster scroll

### Setup notifications when there is activity in a not active window
#setw -g monitor-activity on
#set -g visual-activity on

### Making navigation and commands more like vim
setw -g mode-keys vi # Use vim keys to navigate in copy mode
bind-key -T copy-mode-vi 'v' send -X begin-selection # Set v to start selecting in copy mode
# Not needed as far as the tmux-yank is enabled
# bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel # Set y to copy selection in copy mode

### Easy bindings for split windows
unbind %

# Split window horizontally in the same directory (prefix + \)
bind \ split-window -h -c '#{pane_current_path}'
# Split window horizontally in the same directory and swap panes (prefix + |)
bind | split-window -h -c '#{pane_current_path}' \; swap-pane -U
# Split window vertically in the same directory using (prefix + -)
bind - split-window -v -c '#{pane_current_path}'
# Split window vertically in the same directory and swap panes (prefix + _)
bind _ split-window -v -c '#{pane_current_path}' \; swap-pane -U

# Fuzzy finder to navigate through tmux windows
bind P run "fzf-tmux-select-window"

# Swap selected window closer to the one you are working
bind N run "fzf-tmux-swap-window-closer"

# Split window vertically to a 20% proportion (console paired with code)
bind v split-window -v -p 18 -c '#{pane_current_path}'
# Setup panes to work with Clojure projects
bind r split-window -v -p 18 -c '#{pane_current_path}' "pwd; lein repl" \; split-window -h -p 50 -c "#{pane_current_path}"

### Resize panels easily using prefix + <direction>
bind j resize-pane -D 5 # prefix + j to resize down
bind k resize-pane -U 5 # prefix + k to resize up
bind h resize-pane -L 5 # prefix + h to resize left
bind l resize-pane -R 5 # prefix + l to resize right

### Resize panels easily using prefix + <direction> (BIGGER LEAPS)
bind J resize-pane -D 40 # prefix + J to resize down
bind K resize-pane -U 40 # prefix + K to resize up
bind H resize-pane -L 40 # prefix + H to resize left
bind L resize-pane -R 40 # prefix + L to resize right

#### Setup TPM (Tmux Plugin Manager)
# List of plugins

# prefix + shift + i => install plugins
# prefix + shift + u => update plugins
# prefix + alt + u => clean up plugins
set -g @plugin 'tmux-plugins/tpm'

### Setup tmux with some useful default configs
# Includes:
# * reattach-to-user-namespace
# * unbind prefix when not C-b and prefix + prefix backup
# * prefix + prefix prints prefix to command line (backup)
# * prefix + shift + R reloads the tmux.conf file
set -g @plugin 'tmux-plugins/tmux-sensible'

### Setup mapping for switching between panels using ctrl+<direction>
# It is not necessary to set it in configuration
set -g @plugin 'christoomey/vim-tmux-navigator'

### Enhance copying text in tmux
# prefix + y in NORMAL mode => copy current command line
# prefix + Y in NORMAL mode => copy current directory
# y in COPY mode => copy current selection
# Y in COPY mode => copy current selection and paste it in command line
set -g @plugin 'tmux-plugins/tmux-yank'

### Tool to select specific parts of console history
# prefix + ctrl + f => search for file path
# prefix + ctrl + g => search for git status
# prefix + ctrl + u => search for url
# prefix + ctrl + d => search for digit
set -g @plugin 'tmux-plugins/tmux-copycat'

### Opens file selected in COPY mode
# * o in COPY mode => opens file, pdf, doc, url
# * C-o in COPY mode => opens file with $EDITOR
set -g @plugin 'tmux-plugins/tmux-open'

### Better defaults when dealing with mouse in tmux
# When reaching the end of window, it exists copy-mode
# Add mouse support to some programs that do not support (less, man)
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
